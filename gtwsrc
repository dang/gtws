#!/bin/bash
#
# Config file for gtws.  Should be sourced into your shell.
#
# Cascades up the path, loading any config it finds.  Each more specific config
# file overrides less specific ones.

# Things expected to come from a higher .gtwsrc:
# GTWS_PROJECT - Name of project
# GTWS_PROJECT_VERSION - Version of project
#
# Optional settings:
# GTWS_ORIGIN - Path to origin directory. Defaults to ${HOME}/origin
# GTWS_SETPROMPT - Set the shell prompt to the workspace name

export GTWS_WSPATH=$(readlink -f ${BASH_ARGV[0]%/*})
export GTWS_WSNAME=$(basename "${GTWS_WSPATH}")


# load_rc /path/to/workspace
#
# Recursively load all RC files, starting at /
function load_rc {
	local BASE=$(dirname $(readlink -f "${1}"))
	while [ "${BASE}" !=  "/" ]; do
		if [ -f "${BASE}"/.gtwsrc ]; then
			load_rc "${BASE}"
			if [ -n "${GTWS_VERBOSE}" ]; then
				echo "Loading ${BASE}/.gtwsrc"
			fi
			source "${BASE}"/.gtwsrc
			return 0
		fi
		BASE=$(readlink -f $(dirname "${BASE}"))
	done

	# Stop at /
	return 1
}

__gtws_prompt_command() {
  printf "\033]0;%s:%s\007" "${GTWS_PROMPT}" "${PWD/#$HOME/~}"
}

# title "foobar"
#
# Set the xterm/gnome-terminal title
function title {
	export GTWS_PROMPT="$1"
	export PROMPT_COMMAND="__gtws_prompt_command"
	#echo -en "\033]2;$(__gtws_prompt_command)\007"
}

# Load config files
load_rc ${GTWS_WSPATH}

if [ -z "${GTWS_SAVEPATH}" ]; then
	export GTWS_SAVEPATH="${PATH}"
fi
if [ -n "${GTWS_PATH_EXTRA}" ]; then
	export PATH=$GTWS_SAVEPATH:"${GTWS_PATH_EXTRA}"
fi

export CDPATH=":$GTWS_WSPATH"

title "${GTWS_PROJECT}:${GTWS_PROJECT_VERSION}:${GTWS_WSNAME}"

if [ -z "${GTWS_SAVEPS1}" ]; then
	export GTWS_SAVEPS1="${PS1}"
fi
if [ -n "${GTWS_SETPROMPT}" ]; then
	#PROMPT="($GTWS_PROJECT"
	#if [ "$GTWS_PROJECT_VERSION" != "trunk" ]; then
		#PROMPT="${PROMPT}:${GTWS_PROJECT_VERSION}"
	#fi
	#PROMPT="${PROMPT}:${GTWS_WSNAME})"
	PROMPT="(${GTWS_WSNAME})"
fi
PS1="${PROMPT}${GTWS_SAVEPS1}"

# Make bashmarks local to the workspace and persistent
SDIRS="${GTWS_WSPATH}/.sdirs"

# Local settings go here
